{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "Question Catalog",
  "description": "A list of questions to choose from.",
  "type": "array",
  "items": {
    "type": "object",
    "description": "A question entry is defined of three main parts:\n- A basic question phrase later displayed to the user\n- An input type, which defines the UI element in the frontend as well as the written OSM tags\n-A set of conditions that define under which circumstances the question should be asked",
    "required": [ "question", "answer", "conditions" ],
    "additionalProperties": false,
    "properties": {
      "$comment": {
        "type": "string",
        "description": "For documentation purpose only. Used to note hints, explanations, reasoning or exceptions for other programmers and your future self. Do not underestimate the power and fun of documentation C_C"
      },

      "question": {
        "type": "object",
        "description": "This holds any to the question related information including the question itself.",
        "required": [ "name", "text" ],
        "additionalProperties": false,
        "properties": {
          "name": {
            "description": "A short term describing the content of the answer.",
            "type": "string"
          },
          "text": {
            "description": "The actual question. It should be kept as short as possible while still being comprehensible and independent of the context in which it is asked.",
            "type": "string"
          },
          "description": {
            "description": "Details or further information describing this question.",
            "type": "string"
          },
          "image": {
            "description": "A list of image urls that may help to clarify this question.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri-reference"
            },
            "minItems": 1
          }
        }
      },

      "answer": {
        "type": "object",
        "description": "Holds properties to specify the UI input element and its constraints by which the question can be answered.",
        "required": [ "type", "input" ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "description": "Defines the UI input element used to answer the question.",
            "enum": ["String", "Number", "Duration", "Bool", "List", "MultiList"]
          },
          "input": {
            "type": ["array", "object"],
            "description": "Holds any properties to configure the UI input element and its constraints. The contents of this property **vary in its structure and properties** depending on the input `type`.",
            "items": {
              "type": "object"
            },
            "minItems": 2
          },
          "constructor": {
            "type": "object",
            "description": "The constructor ultimately creates the OSM tags to be written based on the given input value(s). Input types without predefined values like `String`, `Number` and `Duration` require a constructor, while all other types with predefined values have a default constructor that coalesces the selected values.\n The OSM tags to be written are defined by a key of type String and an expression that evaluates to a String. Expressions are defined by an array [] containing the expression identifier as the first element followed by a number of Strings as arguments. The input values can be accessed using the `$input` variable. If the expression starts with the `$input` variable the coalesce expression is assumed.",
            "minProperties": 1,
            "additionalProperties": {
              "$ref": "file:schemas/expression_schema.json"
            }
          }
        },
        "anyOf": [
          {
            "type": "object",
            "description": "Describes a text input field that allows any character.",
            "required": [ "constructor"],
            "properties": {
              "type": {
                "const": "String"
              },
              "input": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "placeholder": {
                    "type": "string",
                    "description": "An optional placeholder for the input field."
                  },
                  "min": {
                    "type": "integer",
                    "description": "Restricts the minimum number of characters allowed by this input field.",
                    "minimum": 0,
                    "maximum": 255,
                    "default": 0
                  },
                  "max": {
                    "type": "integer",
                    "description": "Restricts the maximum number of characters allowed by this input field.",
                    "minimum": 0,
                    "maximum": 255,
                    "default": 255
                  }
                }
              }
            }
          },

          {
            "type": "object",
            "description": "Describes a number input field that allows numbers only.",
            "required": [ "constructor"],
            "properties": {
              "type": {
                "const": "Number"
              },
              "input": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "placeholder": {
                    "type": "string",
                    "description": "An optional placeholder for the input field."
                  },
                  "unit": {
                    "type": "string",
                    "description": "The unit of the input value that will be displayed at the end of the input field."
                  },
                  "min": {
                    "type": "integer",
                    "description": "Limits the input value to a minimum value."
                  },
                  "max": {
                    "type": "integer",
                    "description": "Limits the input value to a maximum value."
                  },
                  "decimals": {
                    "type": "integer",
                    "description": "Restricts the number of allowed decimals by this input field.",
                    "minimum": 0
                  }
                }
              }
            }
          },

          {
            "type": "object",
            "description": "Describes a time input field that allows entering a duration in different time units.",
            "required": [ "constructor"],
            "properties": {
              "type": {
                "const": "Duration"
              },
              "input": {
                "type": "object",
                "additionalProperties": false,
                "anyOf": [
                  { "required": [ "days" ] },
                  { "required": [ "hours" ] },
                  { "required": [ "minutes" ] },
                  { "required": [ "seconds" ] }
                ],
                "properties": {
                  "max": {
                    "type": "integer",
                    "description": "The maximum allowed value for the biggest unit.",
                    "minimum": 1
                  },
                  "days": {
                    "$ref": "#/$defs/unit_options"
                  },
                  "hours": {
                    "$ref": "#/$defs/unit_options"
                  },
                  "minutes": {
                    "$ref": "#/$defs/unit_options"
                  },
                  "seconds": {
                    "$ref": "#/$defs/unit_options"
                  }
                }
              }
            }
          },

          {
            "type": "object",
            "description": "Describes an input with exactly two possible answers that allows the selection of one answer.",
            "properties": {
              "type": {
                "const": "Bool"
              },
              "input": {
                "type": "array",
                "minItems": 2,
                "maxItems": 2,
                "items": {
                  "type": "object",
                  "properties": {
                    "osm_tags": {
                      "type": "object",
                      "description": "All OSM tags that should apply when this entry is selected.",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "name": {
                      "type": "string",
                      "description": "A short term describing this answer. If omitted the first entry will fallback to \"Yes\" and the second to \"No\"."
                    }
                  },
                  "additionalProperties": false,
                  "required": [ "osm_tags" ]
                }
              }
            }
          },

          {
            "type": "object",
            "description": "Describes an input with multiple possible answers. List allows the selection of exactly one answer, while MultiList allows the selection of multiple answers.",
            "properties": {
              "type": {
                "enum": [ "List", "MultiList" ]
              },
              "input": {
                "type": "array",
                "minItems": 2,
                "items": {
                  "type": "object",
                  "properties": {
                    "osm_tags": {
                      "type": "object",
                      "description": "All OSM tags that should apply when this entry is selected.",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "name": {
                      "type": "string",
                      "description": "A short term describing this answer."
                    },
                    "description": {
                      "type": "string",
                      "description": "Additional details and hints clarifying this answer."
                    },
                    "image": {
                      "type": "string",
                      "description": "A single image describing this answer.",
                      "format": "uri-reference"
                    }
                  },
                  "additionalProperties": false,
                  "required": [ "osm_tags", "name" ]
                }
              }
            }
          }
        ]
      },

      "conditions": { "$ref": "file:schemas/osm_condition_schema.json" }
    }
  },

  "$defs": {
    "unit_options": {
      "type": "object",
      "description": "Options for the specific time unit.",
      "additionalProperties": false,
      "minProperties": 1,
      "properties": {
        "step": {
          "type": "integer",
          "description": "The time segment size of the respective duration input.",
          "minimum": 1
        },
        "display": {
          "type": "boolean",
          "description": "Whether the unit input should be displayed to the user.",
          "default": true
        },
        "return": {
          "type": "boolean",
          "description": "Whether this unit should be returned as a separate value.",
          "default": true
        }
      }
    }
  }
}
